{# raw is for ignoring templating with cookiecutter, leaving it for use with conda-build -#}
{% raw -%}
{% set pyproject = load_file_data('../pyproject.toml', from_recipe_dir=True) %}
{% set version = VERSION %}
{% set project = pyproject['project'] %}
{%- endraw %}

package:
  name: {{ cookiecutter.package_name.replace('_', '-') }}
  {% raw -%}
  version: {{ version }}
  {%- endraw %}

source:
  path: ..

build:
  # If the installation is complex, or different between Unix and Windows, use
  # separate bld.bat and build.sh files instead of this key.  Add the line
  # "skip: True  # [py<35]" (for example) to limit to Python 3.5 and newer, or
  # "skip: True  # [not win]" to limit to Windows.
  {% raw -%}
  script: SETUPTOOLS_SCM_PRETEND_VERSION={{version}} {{ PYTHON }} -m pip install --no-build-isolation --no-deps --ignore-installed -vv .
  {%- endraw %}
  {% if cookiecutter.noarch_python == 'y' -%}
  noarch: python
  {% endif %}
  number: 0
  {% if cookiecutter.include_cli == 'y' -%}
  {% raw -%}
  entry_points:
    {% for name, reference in project['scripts'].items() %}
    - {{ name }} = {{ reference }}
    {% endfor %}
  {%- endraw %}
  {% endif %}

requirements:
  # if you need compilers, uncomment these
  #    read more at https://docs.conda.io/projects/conda-build/en/latest/resources/compiler-tools.html
  # build:
  {% raw -%}
  #   - {{ compilers('c') }}
  {%- endraw %}
  host:
    {% raw -%}
    - python {{ project['requires-python'] }}
    - pip
    {% for dep in pyproject['build-system']['requires'] %}
    - {{ dep.lower() }}
    {% endfor %}
    {%- endraw %}
  run:
    {% raw -%}
    - python {{ project['requires-python'] }}
    {% for dep in project['dependencies'] %}
    - {{ dep.lower() }}
    {% endfor %}
    {%- endraw %}

test:
  imports:
    - {{ cookiecutter.package_name }}
  source_files:
    - tests
  requires:
    {% raw -%}
    {% for dep in project['optional-dependencies']['test'] %}
    - {{ dep.lower() }}
    {% endfor %}
    {%- endraw %}
  commands:
    - python -c "from {{ cookiecutter.package_name }} import __version__; assert __version__ == \"{% raw %}{{ version }}{%- endraw %}\""
    - pytest

about:
  home: https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.repo_name }}
  summary: {{ cookiecutter.project_short_description }}
  {% raw -%}
  license: {{ pyproject.get('license') }}
  {%- endraw %}
  license_file: LICENSE
