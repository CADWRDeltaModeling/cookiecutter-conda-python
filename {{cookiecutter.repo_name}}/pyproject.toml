[build-system]
build-backend = "hatchling.build"
requires = ["hatchling", "hatch-vcs>=0.3", "setuptools-scm>=7.1"]

[project]
name = "{{ cookiecutter.repo_name }}"
dynamic = ["version"]
description = "{{ cookiecutter.project_short_description }}"
authors = [
    { name = "{{ cookiecutter.fullname.replace('\"', '\\\"')", email = "{{ cookiecutter.email }}" },
]
license = {text = "{{ cookiecutter.source_license }}"}
readme = "README.md"
requires-python = ">=3.9"
classifiers = [
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    # package requirements go here
]

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-cov",
    "mypy"
]

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "src/{{ cookiecutter.package_name }}/_version.py"

[tool.hatch.version.raw-options]
version_scheme = "post-release"

[tool.hatch.build.targets.sdist]
include = [
    "/src/{{ cookiecutter.package_name }}",
    "/pyproject.toml"
]

{% if cookiecutter.include_cli = "y" -%}
[project.scripts]
conda-project = "{{ cookiecutter.package_name }}.cli.main:main"
{%- endif %}

[project.urls]
repository = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.repo_name }}"

[tool.coverage.report]
omit = [
    "{{ cookiecutter.package_name }}/__main__.py",
    "tests/*",
]
exclude_lines = [
    "pragma: no cover",
    # This covers both typing.TYPE_CHECKING and plain TYPE_CHECKING, with any amount of whitespace
    "if\\s+(typing\\.)?TYPE_CHECKING:",
    'if __name__ == "__main__":'
]

[tool.distutils.bdist_wheel]
universal = true

[tool.mypy]
files = [ "src/{{ cookiecutter.pacakge_name }}/**/*.py" ]
python_version = "3.9"
disallow_untyped_defs = true
warn_no_return = true

[tool.pytest.ini_options]
norecursedirs = [".*", "*.egg*", "build", "dist", "conda.recipe", "examples", "env", "envs", "scripts"]
addopts = [
    "-vv",
    "--cov-report=term-missing",
    "--cov='{{ cookiecutter.package_name }}'",
    "--tb=native",
    "--strict-markers",
    "--durations=20"
]
markers = [
    "serial: execute test serially (to avoid race conditions)",
    "slow: tests can take a long time (deselect with '-m \"not slow\"')",
]
